import os
Import ("*")

lib_name = "std_well"
tar_name = "std_well"

env = custom_env.Clone ()
env.Append (CPPPATH = ["include",
    includes["bs_bos_core_base"],
    includes["common_types"],
    includes["bs_bos_core"],
    includes["bs_bos_core_data_storage"],
    includes["bs_mesh"],
    includes["bs_pvt"], # FIXME: remove
    includes["bs_scal"], # FIXME: remove
    includes["bs_mtx"], # FIXME: remove
    includes["bs_lsolvers"],
	includes["kernel"],
    ])

libs = ["blue_sky", 
     "bs_bos_core_base", 
     "bs_bos_core",
     ]

boost_libs = ["boost_date_time-mt"]

if (build_kind == "debug") :
    env.AppendUnique (LIBS = list_suffix (libs, "_d") + list_suffix (boost_libs, "-d"))
    lib_name += "_d"
elif (build_kind == "release") :
    env.AppendUnique (LIBS = libs + boost_libs)

excluded = []

std_well = env.SharedLibrary (target = os.path.join (tar_exe_plugin_dir, lib_name), source = files (["."], excluded).sources)

env.Alias (tar_name, std_well)
Export ("std_well")

if (env["install"] == 1) :
    inst_tar = env.Install ("$plugins_prefix", std_well)
    env.Alias (tar_name, inst_tar)


